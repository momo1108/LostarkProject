$basicFontColor: #eee;
$myDarkBlue: #2a5996;
$myBlue: #4691f6;
$myLightBlue: #76b1ff;

.body {
  @apply flex-auto xl:px-32 lg:px-24 md:px-16 sm:px-8 px-4 pt-2;
  color: $basicFontColor;

  .searchContainer {
    @apply flex flex-col gap-4;

    .searchHeader {
      @apply flex flex-col gap-4;
      .apiDiv {
        @apply relative pt-5 h-16 flex items-center gap-4;
        .apiKeyInput {
          @apply w-44 bg-transparent outline-none h-8 leading-8 text-lg text-[#eee];
          border-bottom: 1px solid #333;
          &:focus {
            border-color: $myBlue;
            color: $myBlue;
          }
        }

        .placeholder {
          @apply absolute top-8 left-0 text-[#999];
          transition: color 300ms ease-in-out, top 300ms ease-in-out,
            left 300ms ease-in-out, font-size 300ms ease-in-out;
        }
        .apiKeyInput:valid ~ .placeholder {
          @apply text-sm top-2 left-0;
        }
        .apiKeyInput:focus ~ .placeholder {
          @apply text-sm top-2 left-0;
          color: $myBlue;
        }

        button {
          @apply inline-flex text-base px-1 gap-1;
          &[data-px="2"] {
            @apply px-2;
          }
        }
        a {
          @apply inline-flex text-base cursor-pointer px-2 gap-1;
        }

        .apiKeyDiv {
          @apply w-44 font-bold h-8 leading-8 box-content relative;
          &[data-valid="false"] {
            @apply text-red-800 text-center bg-[#f003] border border-red-900;
          }
          &[data-valid="true"]::after {
            @apply absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center;
            content: "API KEY 등록완료";
            color: $myBlue;
            border: 1px solid $myBlue;
            background-color: #0c1b2fee;
          }
        }

        .apiDescr {
          @apply absolute text-xs top-1 text-red-600;
        }
      }
      .presetDiv {
        @apply flex w-full gap-4 items-center h-10;
      }
    }

    .searchBody {
      @apply flex flex-wrap gap-8 items-start;

      .bodyBoxShadow {
        border-radius: 10px;
        border: 1px solid #333;
        box-shadow: 0px 0px 10px -5px #fff;
        background-image: url("/images/engrave_bg.jpg");
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
      }

      .targetEngraveDiv {
        @apply flex flex-col px-2 py-4 w-[450px] gap-4;
        .targetTitle {
          @apply flex text-xl font-bold items-center justify-center gap-2;
        }

        .targetSearchDiv {
          @apply inline-flex relative justify-center mx-auto;
          .engraveIcon {
            @apply absolute left-2 top-0 bottom-0 my-auto;
            &.activeIcon {
              stroke: $myLightBlue;
            }
          }

          .targetSearchInput {
            @apply relative w-48 outline-none py-2 pl-9 bg-transparent;
            border: 1px solid #888a;
            border-radius: 5px;
            color: #ddd;

            &.focused {
              border-color: $myLightBlue;
              color: $myLightBlue;
            }
            &.focused::placeholder {
              color: $myLightBlue;
            }
          }
        }

        .targetList {
          @apply inline-flex flex-col items-start mx-auto min-h-[400px];
          .targetListItem {
            @apply h-[86px] inline-flex p-2 pr-6 items-center gap-2;
            .targetListItemTitle {
              @apply min-w-[134px] text-center font-bold text-[#ccc];
              span {
                color: $myBlue;
              }
            }
            .engraveImgSlot {
              @apply relative inline-flex justify-center;
              .engraveImg {
                @apply absolute top-1/2 left-1/2 w-[45px] h-[45px];
                transform: translate(-50%, -50%);
                &::after {
                  @apply absolute top-0 left-0 right-0 bottom-0 block;
                  content: "";
                  border-radius: 50%;
                  box-shadow: inset 0px 0px 20px -4px #000;
                }
              }
            }
            .engraveLevelList {
              @apply flex gap-1 pl-3;
              li {
                @apply inline-flex justify-center items-center w-6 h-6 font-bold cursor-pointer text-xs;
                transition: transform 200ms ease-out;
                border-width: 1px;

                &:hover {
                  transform: scale(1.2);
                }
              }
            }
          }
        }
      }
      .equipEngraveDiv {
        @apply flex flex-col px-7 py-4 w-[420px] gap-4;
        .equipTitle {
          @apply text-xl font-bold flex justify-center items-center;
          p {
            @apply mr-2;
          }
        }
        .equipSearchDiv {
          @apply inline-flex relative justify-center mx-auto;
          .dropdownSelect {
            @apply flex justify-center gap-1 p-1 pr-2 cursor-pointer w-[130px] transition-all duration-200;
            border: 2px solid #bbb;
            border-radius: 5px;
            &:hover,
            &.focused {
              background: $myBlue;
              border-color: $myBlue;
              color: #fff;
              svg {
                stroke: #fff;
              }
            }
          }
        }

        .equipList {
          @apply text-center min-h-[140px];
          .equipListItem {
            @apply h-[70px] align-middle;
            .equipListItemButtons {
              @apply inline-flex justify-center items-center gap-2;
              .equipAbilityInputDiv {
                @apply w-[141px] text-2xl font-extrabold flex gap-2;
                .inputArea {
                  @apply w-12 h-11 text-right;
                  line-height: 44px;
                }
                .equipAbilityInput {
                  @apply w-8 text-2xl font-extrabold text-right outline-none;
                  background: transparent;
                  border-bottom: 1px solid #fff;
                }
              }
              .equipAbilityP {
                @apply w-12 text-2xl font-extrabold text-right;
              }
              .equipAbilityButtons {
                @apply flex gap-1 font-bold items-start;
                div {
                  @apply flex flex-col gap-1;
                  button {
                    @apply w-5 h-5 inline-flex justify-center items-center;
                    border: 1px solid #fff;
                  }
                }
              }

              &.negativeItemButtons {
                @apply w-[141px] justify-start;
              }
            }
            .equipListItemTitle {
              @apply text-center font-bold text-[#ccc] w-[150px];
              span {
                color: $myBlue;
              }
              .negativeSelect {
                @apply outline-none;
                color: rgb(195, 56, 56);
                background: transparent;
                -moz-appearance: none;
                -webkit-appearance: none;
                appearance: none;

                option {
                  @apply p-4;
                  background: black;
                }
              }
            }
            .equipListItemValue {
              @apply text-2xl font-extrabold w-12 text-center;
            }
            .equipListItemButtonDiv {
              @apply flex flex-col gap-1;
              button {
                @apply w-5 h-5 flex justify-center items-center font-bold;
                border: 1px solid white;
              }
            }
            .engraveImgSlot {
              @apply relative inline-flex justify-center my-auto;
              .engraveImg {
                @apply absolute top-1/2 left-1/2 w-[40px] h-[40px];
                transform: translate(-50%, -50%);

                &.emptyEngraveImg {
                  @apply w-[51px] h-[51px];
                }
                &::after {
                  @apply absolute top-0 left-0 right-0 bottom-0 block;
                  content: "";
                  border-radius: 50%;
                  box-shadow: inset 0px 0px 20px -4px #000;
                }
              }
            }
            .engraveLevelList {
              @apply flex gap-1 pl-3;
              li {
                @apply inline-flex justify-center items-center w-6 h-6 font-bold cursor-pointer text-xs;
                transition: transform 200ms ease-out;
                border-width: 1px;

                &:hover {
                  transform: scale(1.2);
                }
              }
            }
          }

          .emptyListItem {
            @apply h-[140px] relative flex justify-center items-center text-2xl font-extrabold text-[#ccc];
            p {
              @apply relative;
              color: #2f73cd;
            }
            .emptyListItemIconDiv {
              @apply absolute top-1/2 left-1/2;
              transform: translate(-50%, -50%);
              opacity: 0.3;
              svg {
                transform: skew(-20deg) rotate(20deg);
                stroke: $myLightBlue;
              }
            }
          }
        }
      }
      .targetAccessoryDiv {
        @apply flex flex-col px-7 py-4 min-w-[450px] gap-4;
        h4 {
          @apply flex text-xl font-bold items-center justify-center gap-2;
        }
        h5 {
          @apply font-bold;
        }

        .accessoryTableCol1 {
          @apply py-2;
          div {
            @apply px-2 pb-1 inline-flex flex-col min-w-[76px] min-h-[74px] justify-center items-center;
            border: 2px solid #fff;
            border-radius: 10px;
          }
        }

        .accessoryTableCol2 {
          .colBlock {
            @apply flex flex-col w-24 items-center;
            h5 {
              @apply w-14 pl-2 text-lg;
            }
            div {
              @apply relative inline-block;
              .accessoryQuailityInput {
                @apply outline-none w-14 mt-1 text-right pb-[2px];
                background: none;
                border-bottom: 1px solid transparent;
                &:focus {
                  @apply font-bold;
                  color: $myBlue;
                }
              }
              &::before {
                @apply absolute bottom-0 right-4 w-8;
                content: "";
                border-bottom: 1px solid #aaa;
              }
              &::after {
                @apply absolute bottom-0 right-4 w-0 duration-500;
                transition: width 0.5s;
                content: "";
                border-bottom: 1px solid $myBlue;
              }
              &:has(.accessoryQuailityInput:focus)::after {
                @apply w-8;
              }
            }
          }
        }

        .accessoryTableCol3 {
          .colBlock {
            @apply flex flex-col;
            h5 {
              @apply inline-flex text-lg w-[70px] justify-center;
            }
          }
        }
        .accessoryTableCol4 {
          .colBlock {
            @apply flex flex-col;
            h5 {
              @apply inline-flex text-lg w-[70px] justify-center;
            }
          }
        }
      }
    }

    .searchFooter {
      @apply flex flex-col gap-3 items-start;
      .filterWrapper {
        @apply inline-flex grow-0 flex-col gap-3 p-4 pt-2;
        border-radius: 5px;
        border: 1px solid #333;
        box-shadow: 0px 0px 10px -5px #fff;

        .filterHeader {
          @apply flex text-xl font-bold items-center gap-2;
        }
        .filterDescr {
          @apply text-sm flex flex-col gap-[2px];
          color: #999;
        }
        .searchFilterSetting {
          @apply flex flex-wrap gap-x-1 gap-y-3;
          .statFilter {
            @apply grid gap-y-2 grid-cols-3 xs:flex xs:grid-cols-none;
            .filterDiv {
              @apply relative w-16 flex flex-col pt-6;
              input {
                @apply w-16 pr-[1px] outline-none focus:border-[#4691f6] focus:font-bold;
                background: transparent;
              }
              .borderDiv {
                @apply absolute w-12 top-6 cursor-text;
                content: "";
                border-bottom: 1px solid #ddd;
                .filterTitle {
                  transform: translateY(-24px);
                }
              }
              input:focus ~ .borderDiv {
                @apply font-bold;
                color: $myBlue;
                border-color: $myBlue;
              }
            }
          }
          .otherFilter {
            .filterDiv {
              @apply relative w-40 flex flex-col pt-6;
              input {
                @apply w-20 pr-[1px] outline-none focus:border-[#4691f6] focus:font-bold;
                background: transparent;
              }
              .borderDiv {
                @apply absolute box-content w-16 h-6 top-6 cursor-text;
                content: "";
                border-bottom: 1px solid #ddd;
                .filterTitle {
                  @apply absolute w-40 top-[-24px] left-0;
                }
                .filterSubtitle {
                  @apply absolute top-1 right-0 text-sm;
                }
              }
              input:focus ~ .borderDiv {
                @apply font-bold;
                color: $myBlue;
                border-color: $myBlue;
              }
            }
          }
        }
      }
      .searchButtons {
        @apply flex w-full gap-4 items-center h-10;
      }
    }

    .dropdownWrapper {
      @apply absolute top-11 left-0 w-[638px] overflow-hidden z-10;
      &[data-dropdown-order="1"] {
        @apply w-[216px] left-1/2;
        transform: translateX(-50%);
      }
      .dropdown {
        @apply w-full pt-7;
        animation: dropdown 300ms ease-out;
        box-shadow: 0px 0px 7px -3px #ababab;
        .dropdownHeader {
          @apply absolute top-0 text-sm w-full text-center py-1 font-bold;
          background: linear-gradient(
            180.2deg,
            rgb(8, 8, 8) 6.8%,
            rgb(30, 30, 30) 131%
          );

          svg {
            @apply absolute right-2 top-0 bottom-0 my-auto cursor-pointer;
            &:hover {
              stroke: $myBlue;
            }
          }
        }

        .dropdownList {
          @apply w-full max-h-[400px] flex flex-wrap justify-start gap-2 overflow-auto bg-[#222] p-2;
          .dropdownListItem {
            @apply relative inline-flex w-[200px] gap-2 items-center py-1 pl-3 pr-4 cursor-pointer font-bold;
            border: 2px solid #494949;
            p {
              @apply flex-auto text-center;
            }

            .selectedItem {
              @apply flex absolute bg-[#000d] justify-center items-center;
              transition: opacity 100ms ease-out;
              left: -2px;
              right: -2px;
              top: -2px;
              bottom: -2px;
              border: 2px solid $myBlue;
              color: $myBlue;
            }

            img {
              @apply inline;
            }
          }

          .emptyDropdownListItem {
            @apply w-full text-xl font-bold text-center;
            height: 41.56px;
            line-height: 41.56px;
          }
        }
      }
    }

    .emptyListItem {
      @apply h-[100px] relative flex justify-center items-center text-2xl font-extrabold text-[#ccc];
      &[data-empty-type="1"] {
        @apply h-[400px];
        svg {
          animation: rotating 6s linear infinite;
          stroke: $myLightBlue;
          width: 150px;
          height: 150px;
        }
      }
      p {
        @apply relative;
        color: #2f73cd;
      }
      .emptyListItemIconDiv {
        @apply absolute top-1/2 left-1/2;
        transform: translate(-50%, -50%);
        opacity: 0.3;
        perspective: 100px;
        svg {
          animation: rotating 6s linear infinite;
          stroke: $myLightBlue;
        }
      }
    }

    .plusMinusButtons:hover {
      @apply font-extrabold text-lg transition-all duration-200;
      background: #fff;
      color: #111;
    }
    .editButton:hover {
      svg {
        @apply transition-all duration-100;
        stroke: $myBlue;
      }
    }
  }

  .resultContainer {
    @apply flex flex-col gap-3 py-8 relative;
    .resultHeader {
      @apply text-2xl font-bold flex items-end;
      .resultPageDiv {
        @apply text-lg flex items-center;
        .resultPageP {
          @apply min-w-[150px];
        }
        .nextButtonIcon {
          @apply fill-[#fff] stroke-[#fff] hover:fill-[#4691f6] hover:stroke-[#4691f6];
          transition: fill 0.2s ease-in-out, stroke 0.2s ease-in-out;
        }
        .skipButtonIcon {
          @apply fill-[#fff] stroke-[#fff] hover:fill-[#4691f6] hover:stroke-[#4691f6];
          transition: fill 0.2s ease-in-out, stroke 0.2s ease-in-out;
        }
      }
    }
    .resultBodyWrapper {
      @apply flex flex-col gap-3 relative;
      .resultBody {
        @apply flex flex-col gap-3 items-start max-h-[660px] overflow-y-auto;
        .combinationDiv {
          @apply inline-flex flex-col gap-1 flex-wrap;

          .combinationHeader {
            @apply flex flex-col gap-x-4 font-bold text-lg;
            .totalCostDiv {
              @apply flex items-center gap-3;
              .totalCostInfoDiv {
                @apply flex items-center gap-1;
                .totalCost {
                  @apply text-[#ffffbc];
                }
              }
            }
            .totalStatDiv {
              @apply flex gap-2;
              .totalStat {
                @apply flex items-center;
                .statEmoji {
                  @apply text-xs;
                }
              }
            }
          }
          .combinationBody {
            @apply flex flex-wrap gap-2;
            .combinationItemDiv {
              @apply w-[230px] flex flex-wrap gap-1 py-1 px-2;
              box-shadow: 0px 0px 4px -2px #fff;
              border: 1px solid #222;
              border-radius: 5px;
              background-image: url("/images/engrave_bg_sm.jpg");
              background-position: center;
              background-size: cover;
              background-repeat: no-repeat;
              .titleDiv {
                @apply flex gap-2 items-center;
                .titleInfoDiv {
                  @apply flex flex-col justify-center text-sm;
                  .qualityP {
                    @apply text-xs;
                  }
                  .qualityBarDiv {
                    @apply w-[110px];
                    background-color: #fff2;
                  }
                  .tradeP {
                    @apply text-xs mt-[2px];
                    .countSpan {
                      @apply font-bold;
                      color: #9244f7;
                    }
                  }
                }
              }
              .optionDiv {
                @apply text-xs w-full flex gap-2;
                .engraveDiv {
                  @apply max-w-[60%];
                  .negativeP {
                    @apply font-bold text-[#d33];
                  }
                }
                .statDiv {
                  @apply max-w-[40%];
                }
              }
              .costDiv {
                @apply flex flex-col text-xs;
                .costP {
                  @apply flex items-center gap-1;
                  .costSpan {
                    @apply font-bold text-[#ffffbc];
                  }
                }
              }
            }
          }
        }
      }

      .emptyResultBody {
        @apply flex flex-col justify-center items-center font-bold text-2xl h-[660px];
        box-shadow: 0px 0px 10px -5px #fff;
        .iconWrapper {
          @apply flex items-center justify-center h-64;
          .mgIcon {
            animation: shake 6s linear infinite;
          }
        }
      }
    }

    .resultLoader {
      @apply flex justify-center items-center flex-col gap-4;
      .presentationSection {
        @apply flex items-center gap-4;
        .apiSearch {
          @apply relative;
          .magnifyingGlass {
            @apply absolute top-1/2 left-1/2;
            transform: translate(-50%, -50%);
          }
          .floatingRound {
            animation: diagonalRotate 6s linear infinite;
          }
        }
        .dotsWrapper {
          @apply w-[150px] overflow-hidden;
          .dots {
            animation: descreteMove 4s steps(1, jump-both) infinite;
          }
        }
        .findCombination {
          @apply relative;
          .emptyBox {
            @apply absolute top-1/2 left-1/2;
            transform: translate(-50%, -45%);
          }
          .ring,
          .necklace,
          .earring {
            @apply absolute;
            transform: translate(-50%, -50%);
          }
          .ring {
            animation: throwIn 2s 0s linear infinite;
            top: 25%;
            left: 35%;
          }
          .necklace {
            animation: throwIn 2s 0.5s linear infinite;
            top: 20%;
            left: 50%;
          }
          .earring {
            animation: throwIn 2s 1s linear infinite;
            top: 25%;
            left: 65%;
          }
          .gearLargeWrapper {
            @apply absolute flex justify-center items-center;
            top: 61%;
            left: 47%;
            .gearLarge {
              transform: translate(-50%, -50%);
            }
            .gearAnimate {
              animation: gearSpin 5s linear infinite;
            }
          }
          .gearSmallWrapper {
            @apply absolute flex justify-center items-center;
            top: 70%;
            left: 53%;
            .gearSmall {
              transform: translate(-50%, -50%);
            }
            .gearAnimate {
              animation: gearSpin 5s linear infinite reverse;
            }
          }
        }
      }
      .descriptionSection {
        @apply text-2xl font-bold;
        .searchDiv,
        .findDiv {
          @apply flex flex-col items-center justify-center;
        }
        .searchDiv {
          .timeoutDiv {
            @apply text-lg text-center text-[#a77];
            .timerP {
              @apply text-xl;
              color: $myBlue;
            }
          }
        }
      }
    }
  }
}

@keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  1% {
    transform: rotate(4deg);
  }
  2% {
    transform: rotate(0deg);
  }
  3% {
    transform: rotate(-4deg);
  }
  4% {
    transform: rotate(0deg);
  }
}

@keyframes dropdown {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0%);
  }
}

@keyframes rotating {
  0% {
    transform: skew(-23deg) rotateY(0);
  }
  100% {
    transform: skew(-23deg) rotateY(360deg);
  }
}

@keyframes diagonalRotate {
  0% {
    transform: translate(-50%, -50%) rotate3d(1, 1, 0, 0deg);
  }
  7.5% {
    transform: translate(-50%, -51.5%) rotate3d(1, 1, 0, -270deg);
  }
  12.5% {
    transform: translate(-50%, -52.5%) rotate3d(1, 1, 0, -90deg);
  }
  15% {
    transform: translate(-50%, -52%) rotate3d(1, 1, 0, 0deg);
  }
  25% {
    transform: translate(-50%, -50%);
  }
  37.5% {
    transform: translate(-50%, -47.5%);
  }
  50% {
    transform: translate(-50%, -50%);
  }
  62.5% {
    transform: translate(-50%, -52.5%);
  }
  75% {
    transform: translate(-50%, -50%);
  }
  87.5% {
    transform: translate(-50%, -47.5%);
  }
  100% {
    transform: translate(-50%, -50%);
  }
}

@keyframes descreteMove {
  0% {
    transform: translateX(-420px);
  }
  2.5% {
    transform: translateX(-390px);
  }
  5% {
    transform: translateX(-360px);
  }
  7.5% {
    transform: translateX(-330px);
  }
  10% {
    transform: translateX(-300px);
  }
  12.5% {
    transform: translateX(-270px);
  }
  15% {
    transform: translateX(-240px);
  }
  17.5% {
    transform: translateX(-210px);
  }
  20% {
    transform: translateX(-180px);
  }
  22.5% {
    transform: translateX(-150px);
  }
  100% {
    transform: translateX(-120px);
  }
}

@keyframes gearSpin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes throwIn {
  30% {
    opacity: 1;
  }
  80% {
    opacity: 0;
  }
  100% {
    top: 50%;
    left: 50%;
    opacity: 0;
  }
}
